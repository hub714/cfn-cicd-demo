AWSTemplateFormatVersion: 2010-09-09
Description: 3rd party git integration with CodePipeline
Metadata:
  LICENSE: >-
   Copyright 2017 Amazon Web Services

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
Parameters:
  OutputBucketName:
    Description: 'A new S3 bucket that CodePipeline will use for artifacts.'
    Type: String
  CodeCommutUserName:
    Description: 'A Username to access CodeCommit (used for pulls)'
    Type: String
    NoEcho: 'true'
  CodeCommitPassword:
    Description: 'A Password to access CodeCommit (used for pulls)'
    Type: String
    NoEcho: 'true'
  SourceActionVersion:
    Description: The version of the custom source action to use.
    Type: String
    Default: '1'
  GitUrl:
    Description: Giturl
    Type: String
    Default: '1'
Mappings:
  LambdaBuckets:
    us-east-1:
      Name: custom-source-action-blog-us-east-1
    us-west-2:
      Name: custom-source-action-blog-us-west-2
    eu-west-1:
      Name: custom-source-action-blog-eu-west-1
Resources:
  CustomSourceAction:
    Type: 'AWS::CodePipeline::CustomActionType'
    Properties:
      Category: 'Source'
      Settings:
        EntityUrlTemplate: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html'
        ExecutionUrlTemplate: 'https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-create-custom-action.html'
      ConfigurationProperties:
        - Name: BranchName
          Required: true
          Key: false
          Secret: false
          Queryable: false 
          Description: 'Git branch to pull.'
          Type: String
        - Name: GitUrl
          Required: true
          Key: false
          Secret: false
          Queryable: false 
          Description: 'SSH git clone URL.'
          Type: String
        - Name: KeyBucket
          Required: true
          Key: false
          Secret: false
          Queryable: false 
          Description: 'Name of the bucket to store keys in.'
          Type: String
      InputArtifactDetails:
        MaximumCount: 0
        MinimumCount: 0
      OutputArtifactDetails:
        MaximumCount: 1
        MinimumCount: 1
      Provider: 'CustomSourceAction'
      Settings:
        EntityUrlTemplate: !Ref GitUrl
      Version: !Ref SourceActionVersion
  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: git2cp-pipelinerole
          PolicyDocument: '{
            "Statement": [
              {
                "Action": [
                  "s3:GetObject",
                  "s3:GetObjectVersion",
                  "s3:GetBucketVersioning"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "s3:PutObject"
                ],
                "Resource": [
                  "arn:aws:s3:::codepipeline*",
                  "arn:aws:s3:::elasticbeanstalk*"
                ],
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codecommit:CancelUploadArchive",
                  "codecommit:GetBranch",
                  "codecommit:GetCommit",
                  "codecommit:GetUploadArchiveStatus",
                  "codecommit:UploadArchive"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codedeploy:CreateDeployment",
                  "codedeploy:GetApplicationRevision",
                  "codedeploy:GetDeployment",
                  "codedeploy:GetDeploymentConfig",
                  "codedeploy:RegisterApplicationRevision"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "elasticbeanstalk:*",
                  "ec2:*",
                  "elasticloadbalancing:*",
                  "autoscaling:*",
                  "cloudwatch:*",
                  "s3:*",
                  "sns:*",
                  "cloudformation:*",
                  "rds:*",
                  "sqs:*",
                  "ecs:*",
                  "iam:PassRole"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "lambda:InvokeFunction",
                  "lambda:ListFunctions"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "opsworks:CreateDeployment",
                  "opsworks:DescribeApps",
                  "opsworks:DescribeCommands",
                  "opsworks:DescribeDeployments",
                  "opsworks:DescribeInstances",
                  "opsworks:DescribeStacks",
                  "opsworks:UpdateApp",
                  "opsworks:UpdateStack"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "cloudformation:CreateStack",
                  "cloudformation:DeleteStack",
                  "cloudformation:DescribeStacks",
                  "cloudformation:UpdateStack",
                  "cloudformation:CreateChangeSet",
                  "cloudformation:DeleteChangeSet",
                  "cloudformation:DescribeChangeSet",
                  "cloudformation:ExecuteChangeSet",
                  "cloudformation:SetStackPolicy",
                  "cloudformation:ValidateTemplate",
                  "iam:PassRole"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codebuild:BatchGetBuilds",
                  "codebuild:StartBuild"
                ],
                "Resource": "*",
                "Effect": "Allow"
              }
            ],
            "Version": "2012-10-17"
          }'
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn: CustomSourceAction
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref OutputBucket
      Name: 'CustomSourceActionDemo'
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'Source'
              ActionTypeId:
                Category: 'Source'
                Owner: 'Custom'
                Version: !Ref SourceActionVersion
                Provider: 'CustomSourceAction'
              OutputArtifacts:
                - Name: MyApp
              Configuration:
                BranchName: 'master'
                GitUrl: !Ref GitUrl
                KeyBucket: !Ref KeyBucket
              RunOrder: 1
        - Name: 'Build'
          Actions:
            - Name: 'CodeBuild'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              InputArtifacts:
                - Name: MyApp
              OutputArtifacts:
                - Name: MyAppBuilt
              Configuration:
                ProjectName: !Ref CodeBuild
              RunOrder: 1
  KeyBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketEncryption:
        - ServerSideEncryptionConfiguration: 
          - ServerSideEncryptionByDefault:
            - SSEAlgorithm: AES256
      Tags: []
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: git2cp-codebuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
                Resource:
                  - !GetAtt
                    - OutputBucket
                    - Arn
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
      Name: 'CustomSourceActionDemoBuild'
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
  
  OutputBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref OutputBucketName
      VersioningConfiguration:
        Status: Enabled
      Tags: []
  

