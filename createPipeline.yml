Description: Pipeline creation template for cfn-cicd-demo. This will just create a pipeline + codebuild cfn-nag env.
    
Parameters:
            
    GitHubOAuthToken:
        Description: GitHub OAuth Token
        Type: String
        NoEcho: True
        MinLength: 1
        
    GitHubUserName:
        Description: GitHub Username of repo you want CodePipeline to monitor
        Type: String
        MinLength: 1
        Default: hub714
        
    GitHubRepoName:
        Description: GitHub Repo you want CodePipeline to monitor
        Type: String
        MinLength: 1
        Default: cfn-cicd-demo
        
    GitHubBranch:
        Description: GitHub Repo Branch you want CodePipeline to monitor
        Type: String
        MinLength: 1
        Default: master
        
    CFNStackName:
        Description: Name of the CFN Stack you want to update
        Type: String
        MinLength: 1
        Default: infra-cicd-demo-stack
        
    TemplateFileName:
        Description: Filename of the CFN Template You want to deploy
        Type: String
        MinLength: 1
        Default: createVPC.yml
        
    SubscriptionEmail:
        Description: Email for Manual Approval Emails
        Type: String
        MinLength: 1
        Default: hubertc@amazon.com
        
    EnvironmentName:
        Description: Environment Name
        Type: String
        MinLength: 1

Resources:
    CloudWatchLogsGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: !Sub ${AWS::StackName}-LogGroup
        RetentionInDays: 1
      
    ArtifactBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      
    CFNNagCodeBuildProject:
      Type: AWS::CodeBuild::Project
      Properties:
        Artifacts:
          Type: "CODEPIPELINE"
        Source:
          Type: "CODEPIPELINE"
          BuildSpec: "cfn-nag-buildspec.yml"
        Environment:
          ComputeType: "BUILD_GENERAL1_SMALL"
          Image: "aws/codebuild/ruby:2.3.1"
          Type: "LINUX_CONTAINER"
        Name: !Sub ${AWS::StackName}-CFNNagCodeBuild-project
        ServiceRole: !Ref CodeBuildServiceRole
            
    CodeBuildServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${EnvironmentName}-CodeBuildServiceRole
        Path: /
        AssumeRolePolicyDocument: |
          {
              "Statement": [{
                  "Effect": "Allow",
                  "Principal": { "Service": [ "codebuild.amazonaws.com" ]},
                  "Action": [ "sts:AssumeRole" ]
              }]
          }
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Resource: "*"
                  Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - ecr:GetAuthorizationToken
                - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                  Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:PutObject
                    - s3:GetObjectVersion
                - Resource: 
                    - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${CloudWatchLogsGroup}/codebuild/tests/
                    - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${CloudWatchLogsGroup}/codebuild/tests:*
                  Effect: Allow
                  Action: 
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvent
                - Resource:
                    - !Sub arn:aws:s3:::codepipeline-${AWS::Region}-*
                  Effect: Allow
                  Action: 
                    - s3:PutObject
                    - s3:GetObject
                    - s3:GetObjectVersion
    
    CodePipelineServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${EnvironmentName}-CodePipelineServiceRole
        Path: /
        AssumeRolePolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                Service: 
                  - "codepipeline.amazonaws.com"
              Action: 
                - "sts:AssumeRole"
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Resource: "*"
                  Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectVersion
                    - s3:GetBucketVersioning
                - Resource: "arn:aws:s3:::codepipeline*"
                  Effect: Allow
                  Action:
                    - s3:PutObject
                - Resource: "*"
                  Effect: Allow
                  Action:
                    - codebuild:StartBuild
                    - codebuild:BatchGetBuilds
                    - iam:PassRole
                    - iam:CreateRole
                    - iam:DetachRolePolicy
                    - iam:AttachRolePolicy
                    - iam:DeleteRole
                    - iam:PassRole
                    - iam:DeleteRolePolicy
                    - iam:PutRolePolicy
                - Resource: "*"
                  Effect: Allow
                  Action:
                    - ec2:*
                    - elasticloadbalancing:*
                    - autoscaling:*
                    - cloudwatch:*
                    - s3:*
                    - sns:*
                    - cloudformation:*
        
    CFServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${EnvironmentName}-CFServiceRole
        Path: /
        AssumeRolePolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                Service: 
                  - "cloudformation.amazonaws.com"
              Action: 
                - "sts:AssumeRole"
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Resource: "*"
                  Effect: Allow
                  Action:
                    - iam:PassRole
                    - iam:CreateRole
                    - iam:DetachRolePolicy
                    - iam:AttachRolePolicy
                    - iam:DeleteRole
                    - iam:PassRole
                    - iam:DeleteRolePolicy
                    - iam:PutRolePolicy
                    - ec2:*
                    - lambda:*
                    - s3:GetObject
                    - cloudformation:CreateStack
                    - cloudformation:UpdateStack
                    - cloudformation:SetStackPolicy
                    - cloudformation:CreateChangeSet
    ManualApprovalTopic: 
      Type: AWS::SNS::Topic
      Properties: 
        Subscription: 
          - Endpoint: !Ref SubscriptionEmail
            Protocol: email
                     
    Pipeline:
      Type: 'AWS::CodePipeline::Pipeline'
      Properties:
        ArtifactStore:
          Type: S3
          Location: !Ref ArtifactBucket
        Name: !Sub ${AWS::StackName}
        RoleArn: !GetAtt CodePipelineServiceRole.Arn
        Stages:
          - Name: 'Source'
            Actions:
              - Name: 'Source'
                ActionTypeId:
                  Category: 'Source'
                  Owner: 'ThirdParty'
                  Version: '1'
                  Provider: 'GitHub'
                OutputArtifacts:
                  - Name: MyApp
                Configuration:
                  Owner: !Sub ${GitHubUserName}
                  Repo: !Ref GitHubRepoName
                  PollForSourceChanges: 'true'
                  Branch: !Ref GitHubBranch
                  OAuthToken: !Ref GitHubOAuthToken
                RunOrder: 1
          - Name: 'Linting_and_Static_Analysis'
            Actions:
              - Name: CodeBuild
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: 1
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: MyApp
                Configuration:
                  ProjectName: !Ref CFNNagCodeBuildProject
                RunOrder: 1
          - Name: Deploy
            Actions:
              - Name: CreateChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                InputArtifacts:
                  - Name: MyApp
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                  RoleArn: !GetAtt CFServiceRole.Arn
                  StackName: !Ref CFNStackName
                  TemplatePath: !Sub MyApp::${TemplateFileName}
                RunOrder: 1
              - Name: ManualGate
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Version: 1
                  Provider: Manual
                Configuration:
                  NotificationArn: !Ref ManualApprovalTopic
                RunOrder: 2
              - Name: ExecuteChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                InputArtifacts:
                  - Name: MyApp
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                  RoleArn: !GetAtt CFServiceRole.Arn
                  StackName: !Ref CFNStackName
                RunOrder: 3